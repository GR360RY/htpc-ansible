---
# tasks file for kodi-client

- name: Run apt-get update
  apt: update_cache=yes cache_valid_time=3600

- name: Make sure SSH server is installed for remote access
  apt: name=ssh state=installed

- name: Make sure SSH is started on boot
  service: name=ssh state=started enabled=yes

- name: Generate HTPC user password
  command: /usr/bin/openssl passwd -salt random_salt -1 {{ htpc_user_password }}
  register: htpc_user_generated_password
  changed_when: False

- name: Make sure HTPC user is created
  user: name={{ htpc_username }} password={{ htpc_user_generated_password.stdout }} state=present createhome=yes shell=/bin/bash groups=adm,cdrom,sudo,dip,plugdev,lpadmin,sambashare

- name: Create HTPC user .cache/unity directory
  file: path="~{{ htpc_username }}/.cache/unity/" state=directory owner={{ htpc_username }} group={{ htpc_username }} mode=0755

- name: Disable First Login pop-up screen
  file: path="~{{ htpc_username }}/.cache/unity/first_run.stamp" state=touch owner={{ htpc_username }} group={{ htpc_username }} mode=0755

- name: Add Kodi repository
  apt_repository: repo={{ kodi_repo }} state=present

- name: Make sure Kodi is installed
  apt: name='kodi' update_cache=yes

- name: Make sure Kodi Confug folders are available
  file: path={{ item }} state=directory owner={{ htpc_username }} group={{ htpc_username }} mode=0755
  with_items:
    - "~{{ htpc_username }}/.kodi/"
    - "~{{ htpc_username }}/.kodi/userdata"

- name: Update sources location
  template: src=sources.xml.j2 dest="~{{ htpc_username }}/.kodi/userdata/sources.xml" owner={{ htpc_username }} group={{ htpc_username }} mode=0755

- name: Update advancedsettings.xml
  template: src=advancedsettings.xml.j2 dest=~{{ htpc_username }}/.kodi/userdata/advancedsettings.xml owner={{ htpc_username }} group={{ htpc_username }} mode=0644

- name: Setup Autologin for HTPC User
  template: src=etc_lightdm_lightdm.conf.j2 dest=/etc/lightdm/lightdm.conf owner=root group=root mode=0664

- name: Get HTPC User ID
  command: /usr/bin/id -u {{ htpc_username }}
  register: htpc_user_id
  changed_when: False

- name: Get DBUS PATH for HTPC user in AccountService
  shell: dbus-send --print-reply=literal --system --dest=org.freedesktop.Accounts /org/freedesktop/Accounts org.freedesktop.Accounts.FindUserById int64:{{ htpc_user_id.stdout }}
  register: xbmc_dbus_path
  changed_when: False

- name: Set Default Lightdm session to Kodi
  shell: dbus-send --print-reply --system --dest=org.freedesktop.Accounts {{ xbmc_dbus_path.stdout }} org.freedesktop.Accounts.User.SetXSession string:'XBMC'
  when: not kodi_enable_ubuntu_desktop

- name: Set Default Lightdm session to Ubuntu
  shell: dbus-send --print-reply --system --dest=org.freedesktop.Accounts {{ xbmc_dbus_path.stdout }} org.freedesktop.Accounts.User.SetXSession string:'ubuntu'
  when: kodi_enable_ubuntu_desktop

- name: Make sure ~/.config/autostart directory is available
  file: state=directory dest={{ item }} owner={{ htpc_username }} group={{ htpc_username }} mode=0700
  with_items:
    - "~{{ htpc_username }}/.config/"
    - "~{{ htpc_username }}/.config/autostart/"

- name: Startup Kodi automatically on login in full screen mode
  template: src=kodi.desktop.j2 dest=~{{ htpc_username }}/.config/autostart/kodi.desktop owner={{ htpc_username }} group={{ htpc_username }} mode=0664

- name: Add script to disable screensaver
  copy: src=disable_screensaver dest=/usr/bin/disable_screensaver owner=root group=root mode=0755

- name: Disable screensaver both in Unity and Xserver on HTPC user login
  copy: src=disable_screensaver.desktop dest=~{{ htpc_username }}/.config/autostart/disable_screensaver.desktop owner={{ htpc_username }} group={{ htpc_username }} mode=0664

- name: Install Autofs
  apt: name=autofs state=installed
  when: xbmc_external_nas is defined

- name: Make sure Autofs is running and starts on boot
  service: name=autofs state=started enabled=yes
  when: xbmc_external_nas is defined

- name: Update auto.master
  lineinfile: dest=/etc/auto.master regexp='^/-' line='/- auto.direct' insertbefore='^\+auto.master' owner=root group=root mode=0644
  when: xbmc_external_nas is defined

- name: Update auto.direct autofs map
  template: src=etc_auto.direct dest=/etc/auto.direct owner=root group=root mode=0644
  when: xbmc_external_nas is defined

- name: Restart Autofs
  service: name=autofs state=restarted
  changed_when: False
  when: xbmc_external_nas is defined

- name: Create sub Media Folders
  file: path={{ item }} state=directory owner={{ htpc_username }} group={{ htpc_username }} mode=0755
  with_items:
    - "{{media_path}}/{{ movies_folder }}"
    - "{{media_path}}/{{ tv_folder }}"
    - "{{media_path}}/{{ music_folder }}"
    - "{{media_path}}/{{ pictures_folder }}"

