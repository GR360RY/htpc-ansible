---
# tasks file for xbmc-client

# TODO:
# 
# 1. Change play to use by default current user and not xbmc
# 2. Add check for currently configured LightDM session.
#    Skip "Set Default Lightdm session to XBMC" task if defined correctly.
# 3. Add option to work with external nas
# 4. Add option to define xbmc uid to match uid of external nas file owner
# 5. Add option to choose default scraper ( also ) update mysql db template
# 6. Separate Downloads and tmp folders creation and use only deluge or/and sabnzbd roles are defined

- name: Make sure SSH server is installed for remote access
  apt: name=ssh state=installed update_cache=yes cache_valid_time=3600

- name: Make sure SSH is started on boot
  service: name=ssh state=started enabled=yes

- name: Update hostname
  hostname: name={{ htpc_hostname }}
  when: htpc_hostname is defined and ansible_product_name != 'VirtualBox'

- name: Update libsdl1.2 ( Ubuntu BUG 1280665 )
  apt: name=libsdl1.2debian state=latest update_cache=yes

- name: Generate XBMC user password
  command: /usr/bin/openssl passwd -salt random_salt -1 {{ xbmc_user_password }}
  register: xbmc_generated_password
  changed_when: False

- name: Make sure XBMC user is created
  user: name={{ xbmc_user_name }} password={{ xbmc_generated_password.stdout }} state=present createhome=yes shell=/bin/bash groups=adm,cdrom,sudo,dip,plugdev,lpadmin,sambashare

- name: Add XBMC repository
  apt_repository: repo={{ xbmc_repo }} state=present

- name: Make sure XBMC is installed
  apt: name=xbmc state=latest update_cache=yes

- name: Make sure XBMC folders are available
  file: path={{ item }} state=directory owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0755
  with_items:
    - "~{{ xbmc_user_name }}/.xbmc/"
    - "~{{ xbmc_user_name }}/.xbmc/userdata"

- name: Update sources location
  template: src=sources.xml.j2 dest="~{{ xbmc_user_name }}/.xbmc/userdata/sources.xml" owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0755

- name: Update advancedsettings.xml
  template: src=advancedsettings.xml.j2 dest=~{{ xbmc_user_name }}/.xbmc/userdata/advancedsettings.xml owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0644

- name: Setup Autologin for account running XBMC
  template: src=etc_lightdm_lightdm.conf.j2 dest=/etc/lightdm/lightdm.conf owner=root group=root mode=0664

- name: Get XBMC User ID
  command: /usr/bin/id -u {{ xbmc_user_name }}
  register: xbmc_user_id
  changed_when: False

- name: Get DBUS PATH for XBMC user in AccountService
  shell: dbus-send --print-reply=literal --system --dest=org.freedesktop.Accounts /org/freedesktop/Accounts org.freedesktop.Accounts.FindUserById int64:{{ xbmc_user_id.stdout }}
  register: xbmc_dbus_path
  changed_when: False

- name: Set Default Lightdm session to XBMC
  shell: dbus-send --print-reply --system --dest=org.freedesktop.Accounts {{ xbmc_dbus_path.stdout }} org.freedesktop.Accounts.User.SetXSession string:'XBMC'
  when: not xbmc_enable_ubuntu_desktop

- name: Set Default Lightdm session to Ubuntu
  shell: dbus-send --print-reply --system --dest=org.freedesktop.Accounts {{ xbmc_dbus_path.stdout }} org.freedesktop.Accounts.User.SetXSession string:'ubuntu'
  when: xbmc_enable_ubuntu_desktop

- name: Make sure ~/.config/autostart directory is available
  file: state=directory dest={{ item }} owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0700
  with_items:
    - "~{{ xbmc_user_name }}/.config/"
    - "~{{ xbmc_user_name }}/.config/autostart/"

- name: Startup XBMC automatically on login in full screen mode
  template: src=xbmc.desktop.j2 dest=~{{ xbmc_user_name }}/.config/autostart/xbmc.desktop owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0664

- name: Add script to disable screensaver
  copy: src=disable_screensaver dest=/usr/bin/disable_screensaver owner=root group=root mode=0755

- name: Disable screensaver both in Unity and Xserver on xbmb user login
  copy: src=disable_screensaver.desktop dest=~{{ xbmc_user_name }}/.config/autostart/disable_screensaver.desktop owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0664

- name: Install Autofs
  apt: name=autofs state=installed
  when: xbmc_external_nas is defined

- name: Make sure Autofs is running and starts on boot
  service: name=autofs state=started enabled=yes
  when: xbmc_external_nas is defined

- name: Update auto.master
  lineinfile: dest=/etc/auto.master regexp='^/-' line='/- auto.direct' insertbefore='^\+auto.master' owner=root group=root mode=0644
  when: xbmc_external_nas is defined

- name: Update auto.direct autofs map
  template: src=etc_auto.direct dest=/etc/auto.direct owner=root group=root mode=0644
  when: xbmc_external_nas is defined

- name: Restart Autofs
  service: name=autofs state=restarted
  changed_when: False
  when: xbmc_external_nas is defined

- name: Create sub Media Folders
  file: path="{{ xbmc_media_path }}/{{ item.value }}" state=directory owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0755
  with_dict: xbmc_default_media_folders
  when: not xbmc_dont_create_folders

- name: Create XBMC Download Folders
  file: path="{{ xbmc_media_path }}/{{ item.value }}" state=directory owner={{ xbmc_user_name }} group={{ xbmc_user_name }} mode=0755
  with_dict: xbmc_download_folders
  when: not xbmc_dont_create_folders
